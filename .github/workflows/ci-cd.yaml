name: CI/CD Pipeline â€“ Frontend & Backend to AKS

on:
  push:
    branches:
      - main
      - master

env:
  ACR_NAME: ${{ secrets.ACR_NAME }}
  ACR_LOGIN_SERVER: ${{ secrets.ACR_LOGIN_SERVER }}

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Log in to Azure
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Log in to Azure Container Registry
        run: az acr login --name $ACR_NAME

      - name: Build and push latest Docker images using Compose
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        run: |
          FRONTEND_TAG=${{ env.ACR_LOGIN_SERVER }}/frontend:latest
          BACKEND_TAG=${{ env.ACR_LOGIN_SERVER }}/backend:latest

          echo "Building and pushing images..."
          echo "Frontend -> $FRONTEND_TAG"
          echo "Backend  -> $BACKEND_TAG"

          # Build both images WITHOUT starting containers
          docker compose build

          # Tag the images with ACR repository names
          docker tag miniagenticbot-frontend:latest $FRONTEND_TAG
          docker tag miniagenticbot-backend:latest $BACKEND_TAG

          # Push both to ACR
          docker push $FRONTEND_TAG
          docker push $BACKEND_TAG

          echo "Successfully pushed latest frontend and backend images to ACR!"

      - name: Set up kubectl
        uses: azure/setup-kubectl@v3

      - name: Get AKS credentials
        run: az aks get-credentials --resource-group miniagent --name aks_db --overwrite-existing

      - name: Deploy to AKS
        run: |
          kubectl apply -f k8s/backend-deployment.yaml
          kubectl apply -f k8s/frontend-deployment.yaml
          kubectl rollout restart deployment backend-deployment
          kubectl rollout restart deployment frontend-deployment
